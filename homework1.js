console.log('number' + 3 + 3) // number33 (в данному випадку 'number' стрінга і до неї додається 3 і теж стає стрінгою і потім ще 3 і тому все стає стрінгою. Бо перша була стрінга.
console.log(null + 3) // 3 (null переводиться в 0 тому 0+3 = 3)
console.log(5 && "qwerty") // qwerty (Оператор && повертає перший false-подібний (falsy) елемент, або останній, якщо всі елементи істинні (truthy). Число 5 — це truthy значення, тому перевірка продовжується, і результатом стає друге значення, "qwerty", оскільки воно також truthy і є останнім в операції.)
console.log(+'40' + +'2' + "hillel") // 42hillel (знак + перед '40' '2' означає що треба стрінгу перевести в числа тому 42 і останне значення не можна перевести в число тому воно доєнується у вигляді стрінги )
console.log('10' - 5 === 6) //false ('10' переводиться в число 10 потім віднімається 5 і виходить 5 і це не дорівнює 6 тому false)
console.log(true + false) // 1 (true переводиться в 1 а false переводиться в 0, тому 1+0 = 1)
console.log('4px' - 3)// NaN (в данному випадку не можна виповнити таку арифметичну дію бо перша частина це стрінга яку не можне перевести в число і так як знак - то від стрінги не можна відняти число тому Nan)
console.log('4' - 3) // 1 ('4' перетворюється в число і тому 4-3 = 1)
console.log('6' + 3 ** 0) // 61 (возведення в степінь має вищий пріорітет тому спочатку виконується 3 ** 0 = 1 а потім відбувається контентинація 6 з 1 і тому 61 )
console.log(12 / '6') // 2 ('6' перетворюється у число і потім 12/6 = 2)
console.log('10' + (5 === 6)) // 10false (спочатку відбувається(5 === 6) що дає false і потім це перетворюється в строку і додається до 10 )
console.log(null == '')// false (За специфікацією, null порівнюється лише з undefined при нестрогому порівнянні і більше ні з чим. а в данному випадку '' тому це false)
console.log(3 ** (9 / 3))// 27 (спочатку виконалися умова в дужках(9 / 3) а потім відбулося приведення в степінь)
console.log(!!'false' == !!'true') //true (У JavaScript будь-який непорожній рядок, незалежно від його вмісту, вважається truthy (істинним значенням).В даному випадку, як 'false', так і 'true' — це непорожні рядки, тому і те, і інше значення при подвійному запереченні (!!'false' і !!'true') буде приводитися до true)
console.log(0 || '0' && 1)// 1 
/*( оператори || (логічне АБО) і && (логічне І) працюють з логічними значеннями та повертають одне з операндів на основі їхньої істинності (truthy) або хибності (falsy).
Вираз розбирається зліва направо:
0 || '0' && 1: Спочатку виконується оператор && (вищий пріоритет). Вираз '0' && 1 поверне 1, тому що:
'0' — це непорожній рядок, тому він вважається truthy.
Оператор && повертає другий операнд, якщо перший істинний, тобто результат цього виразу — 1.
Тепер у нас залишився вираз 0 || 1:
Оператор || працює так, що повертає перший truthy операнд. Оскільки 0 є falsy, він пропускається, і повертається другий операнд — 1.
Таким чином, кінцевий результат — 1.)*/
console.log((+null == false) < 1) // false (+null = 0 , 0 == false повертає true, true = 1, тому 1<1 що повертає false)
console.log(false && true || true)// true (перший вираз false && true дає false, други false || true який дає true)
console.log(false && (false || true))// false (перший вираз false || true дає true, другий вираз false && true дає false)
console.log((+null == false) < 1 ** 5)// false (вираз (+null == false) = 1 і 1 ** 5 = 1, тому 1<1 дає false)